package main

import (
	"context"
	"encoding/json"
	"log"
	"time"

	"google.golang.org/grpc"
	pb "google.golang.org/grpc/examples/helloworld/helloworld"
	"gopkg.in/mgo.v2/bson"
)

func main() {
	gRPC_ping := bson.M{"a": 5, "b": 10}
	buf, _ := json.Marshal(gRPC_ping)
	sendPing(string(buf))

}
func sendPing(msg string) {
	// Set up a connection to the server.
	conn, err5 := grpc.Dial(address, grpc.WithInsecure(), grpc.WithBlock())
	if err5 != nil {
		log.Fatalf("did not connect: %v", err5)
	}
	defer conn.Close()
	c := pb.NewGreeterClient(conn)

	// Contact the server and print out its response.
	ctx, cancel := context.WithTimeout(context.Background(), time.Second*120)
	defer cancel()
	for {
		r, err6 := c.SayHello(ctx, &pb.HelloRequest{Name: msg})
		if err6 != nil {
			log.Fatalf("could not greet: %v", err6)
		}
		log.Printf("Greeting: %s", r.GetMessage())
		if r.GetMessage() == "ACK" {
			break
		}
	}
}
